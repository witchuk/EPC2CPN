//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.04.17 at 08:40:10 PM ICT 
//


package object;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded">
 *         &lt;element ref="{http://www.visual-paradigm.com/product/vpuml/modelexporter}DiagramProperties" minOccurs="0"/>
 *         &lt;element name="HiddenDiagramElements" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelsRefs" minOccurs="0"/>
 *         &lt;element ref="{http://www.visual-paradigm.com/product/vpuml/modelexporter}Scenarios" minOccurs="0"/>
 *         &lt;element name="ShowAsIconComponents" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelsRefs" minOccurs="0"/>
 *         &lt;element name="ShowAsKeywordComponents" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelsRefs" minOccurs="0"/>
 *         &lt;element name="ShowAsKeywordAndIconComponents" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelsRefs" minOccurs="0"/>
 *         &lt;element name="ShowAsNoneComponents" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelsRefs" minOccurs="0"/>
 *         &lt;element name="ShowAsIconArtifacts" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelsRefs" minOccurs="0"/>
 *         &lt;element name="ShowAsKeywordArtifacts" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelsRefs" minOccurs="0"/>
 *         &lt;element name="ShowAsKeywordAndIconArtifacts" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelsRefs" minOccurs="0"/>
 *         &lt;element name="ShowAsNoneArtifacts" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelsRefs" minOccurs="0"/>
 *         &lt;element ref="{http://www.visual-paradigm.com/product/vpuml/modelexporter}GridColumns" minOccurs="0"/>
 *         &lt;element ref="{http://www.visual-paradigm.com/product/vpuml/modelexporter}TempFiles" minOccurs="0"/>
 *         &lt;element ref="{http://www.visual-paradigm.com/product/vpuml/modelexporter}DiagramComments" minOccurs="0"/>
 *         &lt;element ref="{http://www.visual-paradigm.com/product/vpuml/modelexporter}ShapeGroups" minOccurs="0"/>
 *         &lt;element ref="{http://www.visual-paradigm.com/product/vpuml/modelexporter}LayersModel" minOccurs="0"/>
 *         &lt;element ref="{http://www.visual-paradigm.com/product/vpuml/modelexporter}Shapes" minOccurs="0"/>
 *         &lt;element ref="{http://www.visual-paradigm.com/product/vpuml/modelexporter}Connectors" minOccurs="0"/>
 *       &lt;/choice>
 *       &lt;attribute name="id" use="required" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelId" />
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="diagramType" use="required" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}modelType" />
 *       &lt;attribute name="displayDiagramType" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="documentation" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="rtfDocumentation" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="imageFileName" type="{http://www.w3.org/2001/XMLSchema}normalizedString" />
 *       &lt;attribute name="imageWidth" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *       &lt;attribute name="imageHeight" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *       &lt;attribute name="trimmedWidth" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *       &lt;attribute name="trimmedHeight" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *       &lt;attribute name="imageScale" type="{http://www.w3.org/2001/XMLSchema}double" />
 *       &lt;attribute name="connectorStyle" type="{http://www.visual-paradigm.com/product/vpuml/modelexporter}connectorStyle" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "diagramPropertiesOrHiddenDiagramElementsOrScenarios"
})
@XmlRootElement(name = "Diagram")
public class Diagram {

    @XmlElementRefs({
        @XmlElementRef(name = "DiagramProperties", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = DiagramProperties.class, required = false),
        @XmlElementRef(name = "ShapeGroups", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = ShapeGroups.class, required = false),
        @XmlElementRef(name = "ShowAsKeywordAndIconArtifacts", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "ShowAsKeywordArtifacts", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "DiagramComments", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = DiagramComments.class, required = false),
        @XmlElementRef(name = "ShowAsKeywordComponents", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "ShowAsIconArtifacts", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "TempFiles", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = TempFiles.class, required = false),
        @XmlElementRef(name = "HiddenDiagramElements", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "ShowAsKeywordAndIconComponents", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "Shapes", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = Shapes.class, required = false),
        @XmlElementRef(name = "ShowAsIconComponents", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "GridColumns", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = GridColumns.class, required = false),
        @XmlElementRef(name = "Connectors", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = Connectors.class, required = false),
        @XmlElementRef(name = "Scenarios", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = Scenarios.class, required = false),
        @XmlElementRef(name = "ShowAsNoneArtifacts", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "LayersModel", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = LayersModel.class, required = false),
        @XmlElementRef(name = "ShowAsNoneComponents", namespace = "http://www.visual-paradigm.com/product/vpuml/modelexporter", type = JAXBElement.class, required = false)
    })
    protected List<Object> diagramPropertiesOrHiddenDiagramElementsOrScenarios;
    @XmlAttribute(name = "id", required = true)
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String id;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "diagramType", required = true)
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String diagramType;
    @XmlAttribute(name = "displayDiagramType")
    protected String displayDiagramType;
    @XmlAttribute(name = "documentation")
    protected String documentation;
    @XmlAttribute(name = "rtfDocumentation")
    protected String rtfDocumentation;
    @XmlAttribute(name = "imageFileName")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String imageFileName;
    @XmlAttribute(name = "imageWidth")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger imageWidth;
    @XmlAttribute(name = "imageHeight")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger imageHeight;
    @XmlAttribute(name = "trimmedWidth")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger trimmedWidth;
    @XmlAttribute(name = "trimmedHeight")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger trimmedHeight;
    @XmlAttribute(name = "imageScale")
    protected Double imageScale;
    @XmlAttribute(name = "connectorStyle")
    protected ConnectorStyle connectorStyle;

    /**
     * Gets the value of the diagramPropertiesOrHiddenDiagramElementsOrScenarios property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the diagramPropertiesOrHiddenDiagramElementsOrScenarios property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDiagramPropertiesOrHiddenDiagramElementsOrScenarios().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DiagramProperties }
     * {@link ShapeGroups }
     * {@link JAXBElement }{@code <}{@link ModelsRefs }{@code >}
     * {@link JAXBElement }{@code <}{@link ModelsRefs }{@code >}
     * {@link DiagramComments }
     * {@link JAXBElement }{@code <}{@link ModelsRefs }{@code >}
     * {@link JAXBElement }{@code <}{@link ModelsRefs }{@code >}
     * {@link TempFiles }
     * {@link JAXBElement }{@code <}{@link ModelsRefs }{@code >}
     * {@link JAXBElement }{@code <}{@link ModelsRefs }{@code >}
     * {@link Shapes }
     * {@link JAXBElement }{@code <}{@link ModelsRefs }{@code >}
     * {@link GridColumns }
     * {@link Connectors }
     * {@link Scenarios }
     * {@link JAXBElement }{@code <}{@link ModelsRefs }{@code >}
     * {@link LayersModel }
     * {@link JAXBElement }{@code <}{@link ModelsRefs }{@code >}
     * 
     * 
     */
    public List<Object> getDiagramPropertiesOrHiddenDiagramElementsOrScenarios() {
        if (diagramPropertiesOrHiddenDiagramElementsOrScenarios == null) {
            diagramPropertiesOrHiddenDiagramElementsOrScenarios = new ArrayList<Object>();
        }
        return this.diagramPropertiesOrHiddenDiagramElementsOrScenarios;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the diagramType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDiagramType() {
        return diagramType;
    }

    /**
     * Sets the value of the diagramType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDiagramType(String value) {
        this.diagramType = value;
    }

    /**
     * Gets the value of the displayDiagramType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayDiagramType() {
        return displayDiagramType;
    }

    /**
     * Sets the value of the displayDiagramType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayDiagramType(String value) {
        this.displayDiagramType = value;
    }

    /**
     * Gets the value of the documentation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDocumentation() {
        return documentation;
    }

    /**
     * Sets the value of the documentation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocumentation(String value) {
        this.documentation = value;
    }

    /**
     * Gets the value of the rtfDocumentation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRtfDocumentation() {
        return rtfDocumentation;
    }

    /**
     * Sets the value of the rtfDocumentation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRtfDocumentation(String value) {
        this.rtfDocumentation = value;
    }

    /**
     * Gets the value of the imageFileName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getImageFileName() {
        return imageFileName;
    }

    /**
     * Sets the value of the imageFileName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setImageFileName(String value) {
        this.imageFileName = value;
    }

    /**
     * Gets the value of the imageWidth property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getImageWidth() {
        return imageWidth;
    }

    /**
     * Sets the value of the imageWidth property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setImageWidth(BigInteger value) {
        this.imageWidth = value;
    }

    /**
     * Gets the value of the imageHeight property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getImageHeight() {
        return imageHeight;
    }

    /**
     * Sets the value of the imageHeight property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setImageHeight(BigInteger value) {
        this.imageHeight = value;
    }

    /**
     * Gets the value of the trimmedWidth property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getTrimmedWidth() {
        return trimmedWidth;
    }

    /**
     * Sets the value of the trimmedWidth property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTrimmedWidth(BigInteger value) {
        this.trimmedWidth = value;
    }

    /**
     * Gets the value of the trimmedHeight property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getTrimmedHeight() {
        return trimmedHeight;
    }

    /**
     * Sets the value of the trimmedHeight property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTrimmedHeight(BigInteger value) {
        this.trimmedHeight = value;
    }

    /**
     * Gets the value of the imageScale property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getImageScale() {
        return imageScale;
    }

    /**
     * Sets the value of the imageScale property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setImageScale(Double value) {
        this.imageScale = value;
    }

    /**
     * Gets the value of the connectorStyle property.
     * 
     * @return
     *     possible object is
     *     {@link ConnectorStyle }
     *     
     */
    public ConnectorStyle getConnectorStyle() {
        return connectorStyle;
    }

    /**
     * Sets the value of the connectorStyle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConnectorStyle }
     *     
     */
    public void setConnectorStyle(ConnectorStyle value) {
        this.connectorStyle = value;
    }

}
